#!/usr/bin/perl

=head1 NAME

dh_installepics - Install EPICS support in standard locations

=head1 SYNOPSIS

B<dh_installepics> [S<I<debhelper options>>]

=head1 DESCRIPTION

Looks for shared libraries in debian/tmp/${EPICSBASE}/lib/${EPICS_HOST_ARCH}/.
Moves any shared libraries with SO names found to debian/tmp/usr/lib/
and adjusts symlinks in the original directory.

This allows binaries linked against libXYZ.so.# to find it in the
default search path when run.  At the same time new binaries being
linked must explicitly add ${EPICSBASE}/lib/<targetname>/ to
the search path.

The intent of this process is to prevent accidentally linking
against the wrong copy/version of a library.

=cut

use strict;
use warnings;
use Debian::Debhelper::Dh_Lib;
use Debian::Debhelper::Dh_Epics qw(setepicsenv epics_sover);

init();

setepicsenv();

# first move host libraries

# collect host libraries with SO names
my @libs = glob("debian/tmp/$ENV{EPICS_BASE}/lib/$ENV{EPICS_HOST_ARCH}/lib*.so.*");

if( @libs > 0) {
    doit("install","-m","755","-d","debian/tmp/usr/lib");        
}

foreach my $lib (@libs) {
    my $edir = dirname($lib);
    my $lname = basename($lib);
    my ($base, $sov) = $lname =~ m/(lib.*\.so)\.(.*)/;

    if(-e "$edir/$base" and not -l "$edir/$base") {
        warning("Warning: Not a symlink:  $edir/$base");
    }

    doit("mv",$lib,"debian/tmp/usr/lib/$lname");
    doit("rm","-f","$edir/$base");
    doit("ln","-s","../../../$lname","$edir/$base");
}

foreach my $pkg (getpackages()) {
    next unless($pkg =~ m/^rtems-(.+)-([^-]+)$/);
    my $srcname = $1;
    my $bsp = $2;

    # install RTEMS binaries and libraries
    if(! -f "debian/$pkg.install") {

        foreach my $part (qw(lib bin)) {
            if(-d "debian/tmp/$ENV{EPICS_BASE}/$part/RTEMS-${bsp}") {
                doit("install","-d","debian/$pkg/$ENV{EPICS_BASE}/$part");
                doit("cp","-r","debian/tmp/$ENV{EPICS_BASE}/$part/RTEMS-${bsp}",
                            "debian/$pkg/$ENV{EPICS_BASE}/$part/RTEMS-${bsp}");
                my @bins = glob("debian/$pkg/$ENV{EPICS_BASE}/$part/RTEMS-${bsp}/*");
                foreach my $bin(@bins) {
                    next unless(-x $bin);
                    doit("chmod","-x",$bin);
                }
            }
        }
    }

    # Normal Lintian overrides for RTEMS
    if(! -f "debian/$pkg.lintian-overrides") {

        doit("install","-d","debian/$pkg/usr/share/lintian/overrides");

        verbose_print("Write overrides for $pkg");
        my $over;
        if($dh{NO_ACT}) {
            open($over, '>-');
        } else {
            open($over, '>', "debian/$pkg/usr/share/lintian/overrides/$pkg") || 
            error("failed to write override");
        }

        print {$over} << "OVERRIDE";
$pkg: arch-independent-package-contains-binary-or-object
# Target binaries are independent of the host
$pkg: statically-linked-binary
# Everything RTEMS is statically linked
$pkg: unstripped-binary-or-object
# The user must decide whether to strip
OVERRIDE
    }
}

=head1 SEE ALSO

L<debhelper(7)>, L<epics-debhelper(7)>

This program is a not part of the official debhelper package.

=head1 AUTHOR

Michael Davidsaver <mdavidsaver@bnl.gov>

=cut
